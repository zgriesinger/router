schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.2", for: EXECUTION)
{
  query: Query
}

directive @join__field(graph: join__Graph!, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

type Book
  @join__type(graph: OPENLIBRARY)
{
  id: ID!
  title: String
  author: String
  year: Int
  isbn: String
  cover: Cover!
  description: Description
}

type Cover
  @join__type(graph: OPENLIBRARY)
{
  id: ID
  small: String
  medium: String
  large: String
}

type Description
  @join__type(graph: OPENLIBRARY)
{
  short: String
  full: String
}

scalar join__FieldSet

enum join__Graph {
  OPENLIBRARY @join__graph(name: "openlibrary", url: "https://openlibrary.fly.dev/")
  PROFILES @join__graph(name: "profiles", url: "https://alexandria-profiles.fly.dev")
  PROFILES_EU @join__graph(name: "profiles-eu", url: "https://alexandria-profiles-eu.fly.dev")
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Profile
  @join__type(graph: PROFILES, key: "id")
  @join__type(graph: PROFILES_EU, key: "id")
{
  id: ID!
  firstName: String
  lastName: String
  phoneNumber: String
}

type Query
  @join__type(graph: OPENLIBRARY)
  @join__type(graph: PROFILES)
  @join__type(graph: PROFILES_EU)
{
  books: [Book] @join__field(graph: OPENLIBRARY)
  search(query: String): [Book] @join__field(graph: OPENLIBRARY)
  profile(id: ID!): Profile @join__field(graph: PROFILES) @join__field(graph: PROFILES_EU)
  profiles: [Profile] @join__field(graph: PROFILES) @join__field(graph: PROFILES_EU)
}